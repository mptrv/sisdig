<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.14.6" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;&#13;
use ieee.std_logic_1164.all;&#13;
&#13;
entity TCL_Generic is&#13;
  port(&#13;
    --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
&#13;
	  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
  );&#13;
end TCL_Generic;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <tool name="Text">
      <a name="text" val="A"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(300,210)" to="(300,230)"/>
    <wire from="(200,150)" to="(230,150)"/>
    <wire from="(130,230)" to="(300,230)"/>
    <wire from="(290,170)" to="(320,170)"/>
    <wire from="(380,190)" to="(410,190)"/>
    <wire from="(300,210)" to="(320,210)"/>
    <wire from="(130,150)" to="(170,150)"/>
    <wire from="(130,190)" to="(230,190)"/>
    <comp lib="5" loc="(130,230)" name="Button">
      <a name="label" val="C"/>
      <a name="labelloc" val="center"/>
    </comp>
    <comp lib="1" loc="(380,190)" name="NAND Gate"/>
    <comp lib="1" loc="(200,150)" name="NOT Gate"/>
    <comp lib="5" loc="(130,190)" name="Button">
      <a name="label" val="B"/>
      <a name="labelloc" val="center"/>
    </comp>
    <comp lib="5" loc="(410,190)" name="LED">
      <a name="color" val="#ffffff"/>
      <a name="label" val="S"/>
      <a name="labelloc" val="center"/>
    </comp>
    <comp lib="1" loc="(290,170)" name="XOR Gate"/>
    <comp lib="5" loc="(130,150)" name="Button">
      <a name="label" val="A"/>
      <a name="labelloc" val="center"/>
    </comp>
  </circuit>
  <circuit name="CircuitoDeExpressaoLogica">
    <a name="circuit" val="CircuitoDeExpressaoLogica"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(160,110)" to="(160,180)"/>
    <wire from="(360,180)" to="(360,310)"/>
    <wire from="(70,390)" to="(380,390)"/>
    <wire from="(130,200)" to="(240,200)"/>
    <wire from="(270,250)" to="(440,250)"/>
    <wire from="(440,320)" to="(440,340)"/>
    <wire from="(440,360)" to="(440,380)"/>
    <wire from="(70,150)" to="(240,150)"/>
    <wire from="(70,250)" to="(240,250)"/>
    <wire from="(70,310)" to="(240,310)"/>
    <wire from="(130,340)" to="(130,430)"/>
    <wire from="(340,330)" to="(380,330)"/>
    <wire from="(350,210)" to="(350,370)"/>
    <wire from="(100,330)" to="(100,430)"/>
    <wire from="(350,370)" to="(380,370)"/>
    <wire from="(70,110)" to="(70,150)"/>
    <wire from="(340,170)" to="(360,170)"/>
    <wire from="(360,310)" to="(380,310)"/>
    <wire from="(70,390)" to="(70,430)"/>
    <wire from="(160,180)" to="(160,220)"/>
    <wire from="(420,190)" to="(440,190)"/>
    <wire from="(440,210)" to="(460,210)"/>
    <wire from="(440,230)" to="(460,230)"/>
    <wire from="(500,350)" to="(520,350)"/>
    <wire from="(160,220)" to="(240,220)"/>
    <wire from="(270,210)" to="(350,210)"/>
    <wire from="(100,170)" to="(240,170)"/>
    <wire from="(100,330)" to="(240,330)"/>
    <wire from="(70,250)" to="(70,310)"/>
    <wire from="(130,200)" to="(130,340)"/>
    <wire from="(360,170)" to="(360,180)"/>
    <wire from="(350,200)" to="(350,210)"/>
    <wire from="(160,220)" to="(160,430)"/>
    <wire from="(70,310)" to="(70,390)"/>
    <wire from="(440,230)" to="(440,250)"/>
    <wire from="(440,190)" to="(440,210)"/>
    <wire from="(130,340)" to="(300,340)"/>
    <wire from="(130,110)" to="(130,200)"/>
    <wire from="(100,170)" to="(100,330)"/>
    <wire from="(410,320)" to="(440,320)"/>
    <wire from="(70,150)" to="(70,250)"/>
    <wire from="(270,160)" to="(300,160)"/>
    <wire from="(270,320)" to="(300,320)"/>
    <wire from="(350,200)" to="(380,200)"/>
    <wire from="(360,180)" to="(380,180)"/>
    <wire from="(440,360)" to="(460,360)"/>
    <wire from="(440,340)" to="(460,340)"/>
    <wire from="(500,220)" to="(520,220)"/>
    <wire from="(430,380)" to="(440,380)"/>
    <wire from="(160,180)" to="(300,180)"/>
    <wire from="(100,110)" to="(100,170)"/>
    <comp lib="8" loc="(69,104)" name="Text">
      <a name="text" val="A"/>
    </comp>
    <comp lib="8" loc="(99,104)" name="Text">
      <a name="text" val="B"/>
    </comp>
    <comp lib="8" loc="(129,104)" name="Text">
      <a name="text" val="C"/>
    </comp>
    <comp lib="1" loc="(270,160)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(340,170)" name="NAND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(270,210)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(420,190)" name="NOR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(270,250)" name="NOT Gate"/>
    <comp lib="1" loc="(500,220)" name="XOR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="8" loc="(158,104)" name="Text">
      <a name="text" val="D"/>
    </comp>
    <comp lib="8" loc="(534,224)" name="Text">
      <a name="text" val="X"/>
    </comp>
    <comp lib="1" loc="(270,320)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(340,330)" name="NOR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(410,320)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(430,380)" name="XNOR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(500,350)" name="NOR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="8" loc="(534,352)" name="Text">
      <a name="text" val="Y"/>
    </comp>
  </circuit>
</project>
